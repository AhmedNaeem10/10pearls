CREATE TABLE CUSTOMERS(
	CUSTOMER_ID INT AUTO_INCREMENT,
    USERNAME VARCHAR(15) NOT NULL UNIQUE,
    PASSWORD VARCHAR(18) NOT NULL,
    EMAIL VARCHAR(50) NOT NULL UNIQUE,
    FIRST_NAME VARCHAR(15),
    LAST_NAME VARCHAR(15),
    DOB DATE,
    PHONE VARCHAR(11) UNIQUE,
    CNIC VARCHAR(13) UNIQUE,
    ADDRESS VARCHAR(100),
    
	check(password regexp '[0-9]' and password regexp '[A-Z]' and password regexp '[!@#$%^&*()-_+=.,;:\'"`~]' and length(password) >= 8),
    CHECK(EMAIL REGEXP '^[a-z0-9!#$%&\'*+/=?^_`{|}~-]+(\.[a-z0-9!#$%&\'*+/=?^_`{|}~-]+)*@([a-z0-9]+[a-z0-9-]*)*[a-z0-9]+(\.([a-z0-9]+[a-z0-9-]*)*[a-z0-9]+)*\.[a-z]{2,6}$' and email like '%.com'),
    CHECK(CNIC REGEXP '[0-9]{5,}-[0-9]{7,}-[0-9]'),
    CHECK(PHONE REGEXP '[0-9]{11,}'),
    CHECK(LENGTH(ADDRESS) >= 10),
    CHECK(LENGTH(USERNAME) >=6 AND LENGTH(USERNAME) <= 15),
    CHECK(FIRST_NAME REGEXP '[a-z]{2,15}'),
    CHECK(LAST_NAME REGEXP '[a-z]{2,15}'),
	CONSTRAINT PK_CUSTOMER PRIMARY KEY (CUSTOMER_ID)
);

CREATE TABLE WORKERS(
	WORKER_ID INT AUTO_INCREMENT,
    FIRST_NAME VARCHAR(15) NOT NULL,
    LAST_NAME VARCHAR(15) NOT NULL,
    PHONE VARCHAR(11) NOT NULL,
    DOB DATE NOT NULL,
    CNIC VARCHAR(15) NOT NULL UNIQUE,
    ADDRESS VARCHAR(100) NOT NULL,
    EMAIL VARCHAR(50),
    AVAILABLE BOOLEAN,
    
    CHECK(FIRST_NAME REGEXP '[a-z]{2,15}'),
    CHECK(LAST_NAME REGEXP '[a-z]{2,15}'),
	CHECK(PHONE REGEXP '[0-9]{11,}'),
    CHECK(LENGTH(ADDRESS) >= 10),
    CHECK(EMAIL REGEXP '^[a-z0-9!#$%&\'*+/=?^_`{|}~-]+(\.[a-z0-9!#$%&\'*+/=?^_`{|}~-]+)*@([a-z0-9]+[a-z0-9-]*)*[a-z0-9]+(\.([a-z0-9]+[a-z0-9-]*)*[a-z0-9]+)*\.[a-z]{2,6}$' and email like '%.com'),
	CHECK(CNIC REGEXP '[0-9]{5,}-[0-9]{7,}-[0-9]'),
    
    CONSTRAINT PK_WORKER PRIMARY KEY (WORKER_ID)
);


CREATE TABLE ADMINS(
	id INT AUTO_INCREMENT,
    USERNAME VARCHAR(15) NOT NULL UNIQUE,
    PASSWORD VARCHAR(15) NOT NULL,
    
	CHECK(LENGTH(USERNAME) >=6 AND LENGTH(USERNAME) <= 15),
	check(password regexp '[0-9]' and password regexp '[A-Z]' and password regexp '[!@#$%^&*()-_+=.,;:\'"`~]' and length(password) >= 8),
    CONSTRAINT PK_ADMIN PRIMARY KEY (id)
);

CREATE TABLE REQUESTS(
	REQUEST_ID INT AUTO_INCREMENT,
    CUSTOMER_ID INT,
    DATE_TIME TIMESTAMP NOT NULL,
    REQUEST_STATUS VARCHAR(15) NOT NULL,
    
    CHECK(LOWER(REQUEST_STATUS) LIKE 'pending' OR LOWER(REQUEST_STATUS) LIKE 'reviewed' OR LOWER(REQUEST_STATUS) LIKE 'approved' OR LOWER(REQUEST_STATUS) LIKE 'rejected' OR LOWER(REQUEST_STATUS) LIKE 'completed'),
    
    CONSTRAINT PK_REQUEST PRIMARY KEY (REQUEST_ID),
    CONSTRAINT FK_CUSTOMER FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMERS(CUSTOMER_ID)
);

CREATE TABLE SERVICE_DETAILS(
	SERVICE_DETAIL_ID INT AUTO_INCREMENT,
    WORKER_ID INT,
    SERVICE_NAME VARCHAR(15) NOT NULL,
    SERVICE_CHARGES FLOAT NOT NULL,
    
    CHECK(SERVICE_CHARGES > 0),
    
    CONSTRAINT PK_SERVICE_DETAIL PRIMARY KEY (SERVICE_DETAIL_ID),
    CONSTRAINT FK_SERVICE_DETAIL_WORKER FOREIGN KEY (WORKER_ID) REFERENCES WORKERS(WORKER_ID),
    CONSTRAINT UNIQUE_WORKER_SERVICE UNIQUE(WORKER_ID, SERVICE_NAME)
);

CREATE TABLE SERVICES(
	SERVICE_ID INT AUTO_INCREMENT,
    CUSTOMER_ID INT,
    SERVICE_DETAIL_ID INT,
    DATE_TIME TIMESTAMP NOT NULL,
    PAYMENT_METHOD VARCHAR(15),
    
    CONSTRAINT PK_SERVICE PRIMARY KEY (SERVICE_ID),
    CONSTRAINT FK_SERVICE_SERVICE_DETAIL FOREIGN KEY (SERVICE_DETAIL_ID) REFERENCES SERVICE_DETAILS(SERVICE_DETAIL_ID)
);

CREATE TABLE REVIEWS(
	REVIEW_ID INT AUTO_INCREMENT,
    SERVICE_ID INT,
    RATING INT NOT NULL,
    FEEDBACK TEXT,
    
    CHECK(RATING >= 1 AND RATING <= 5),
    CHECK(LENGTH(FEEDBACK) >= 10),
    CONSTRAINT PK_REVIEW PRIMARY KEY (REVIEW_ID),
    CONSTRAINT FK_REVIEW_SERVICE FOREIGN KEY (SERVICE_ID) REFERENCES SERVICES(SERVICE_ID)
);

CREATE TABLE CARD_DETAILS(
	CARD_ID INT AUTO_INCREMENT,
    CUSTOMER_ID INT,
    MM VARCHAR(2),
    YYYY VARCHAR(4),
    CARD_NUM VARCHAR(4),  -- LAST 4 DIGITS
    CVC VARCHAR(4),
    
    CONSTRAINT PK_CARD_DETAILS PRIMARY KEY (CARD_ID),
    CONSTRAINT FK_CARD_DETAILS_CUSTOMER FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMERS(CUSTOMER_ID)
);

CREATE TABLE TESTS(
	FIRST_NAME VARCHAR(15),
    LAST_NAME VARCHAR(15),
	 CHECK(FIRST_NAME REGEXP '[a-z]{2,15}'),
     CHECK(LAST_NAME REGEXP '[a-z]{2,15}')
);

DROP TABLE TESTS;

INSERT INTO TESTS VALUES('ahmed','naeem');



-- CREATE DATABASE HOME_SERVICES;
-- DROP TABLE TESTS;

-- DROP TABLE ADMINS;

-- INSERT INTO TESTS(TEST, PARA) VALUES(2, 'ABC');
-- SELECT * FROM WORKERS;
-- UPDATE WORKERS SET AVAILABLE = true WHERE WORKER_ID = 1;
-- SELECT * FROM SERVICE_DETAILS;
-- SELECT * FROM WORKERS W LEFT OUTER JOIN SERVICE_DETAILS SD ON W.WORKER_ID = SD.WORKER_ID WHERE W.WORKER_ID = 1;
-- SELECT * FROM service_details GROUP BY WORKER_ID;

-- SELECT * FROM TESTS;
-- SELECT * FROM ADMINS;
-- DROP TABLE ADMINS;
-- DROP TABLE SERVICE_DETAILS;
-- INSERT INTO ADMINS(USERNAME, PASSWORD) VALUES('admin', 'admin');


